// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_1273081_M09_P1.Models;

#nullable disable

namespace Project_1273081_M09_P1.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20231001195332_Initail Create")]
    partial class InitailCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_1273081_M09_P1.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<DateTime?>("CourseDuration")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("ExrtaClass")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            CourseDuration = new DateTime(2022, 12, 31, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3736),
                            ExrtaClass = 290,
                            TeacherId = 1
                        },
                        new
                        {
                            SubjectId = 2,
                            CourseDuration = new DateTime(2023, 2, 4, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3778),
                            ExrtaClass = 211,
                            TeacherId = 2
                        },
                        new
                        {
                            SubjectId = 3,
                            CourseDuration = new DateTime(2022, 8, 16, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3790),
                            ExrtaClass = 111,
                            TeacherId = 3
                        },
                        new
                        {
                            SubjectId = 4,
                            CourseDuration = new DateTime(2022, 9, 24, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3802),
                            ExrtaClass = 299,
                            TeacherId = 4
                        },
                        new
                        {
                            SubjectId = 5,
                            CourseDuration = new DateTime(2022, 10, 14, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3827),
                            ExrtaClass = 142,
                            TeacherId = 5
                        },
                        new
                        {
                            SubjectId = 6,
                            CourseDuration = new DateTime(2022, 11, 11, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3840),
                            ExrtaClass = 138,
                            TeacherId = 1
                        },
                        new
                        {
                            SubjectId = 7,
                            CourseDuration = new DateTime(2022, 12, 25, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3851),
                            ExrtaClass = 118,
                            TeacherId = 2
                        },
                        new
                        {
                            SubjectId = 8,
                            CourseDuration = new DateTime(2023, 1, 27, 1, 53, 32, 270, DateTimeKind.Local).AddTicks(3861),
                            ExrtaClass = 293,
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("Project_1273081_M09_P1.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<decimal>("ExpectSalary")
                        .HasColumnType("Money");

                    b.Property<bool?>("IsReadyToPrivateCoaching")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            ExpectSalary = 1775.00m,
                            IsReadyToPrivateCoaching = true,
                            Picture = "1.jpg",
                            Role = 2,
                            TeacherName = "Teacher 1"
                        },
                        new
                        {
                            TeacherId = 2,
                            ExpectSalary = 1641.00m,
                            IsReadyToPrivateCoaching = true,
                            Picture = "2.jpg",
                            Role = 3,
                            TeacherName = "Teacher 2"
                        },
                        new
                        {
                            TeacherId = 3,
                            ExpectSalary = 1159.00m,
                            IsReadyToPrivateCoaching = true,
                            Picture = "3.jpg",
                            Role = 4,
                            TeacherName = "Teacher 3"
                        },
                        new
                        {
                            TeacherId = 4,
                            ExpectSalary = 1243.00m,
                            IsReadyToPrivateCoaching = true,
                            Picture = "4.jpg",
                            Role = 3,
                            TeacherName = "Teacher 4"
                        },
                        new
                        {
                            TeacherId = 5,
                            ExpectSalary = 1200.00m,
                            IsReadyToPrivateCoaching = true,
                            Picture = "5.jpg",
                            Role = 2,
                            TeacherName = "Teacher 5"
                        });
                });

            modelBuilder.Entity("Project_1273081_M09_P1.Models.Subject", b =>
                {
                    b.HasOne("Project_1273081_M09_P1.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Project_1273081_M09_P1.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
